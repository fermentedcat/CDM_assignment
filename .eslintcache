[{"/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/index.js":"1","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/reportWebVitals.js":"2","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/App.js":"3","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/contexts/UserDataContext.js":"4","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/pages/LoginPage.jsx":"5","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/pages/CustomerCreatePage.jsx":"6","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/pages/CustomerDetailPage.jsx":"7","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/pages/CustomerUpdatePage.jsx":"8","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/pages/HomePage.jsx":"9","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/pages/DevCompareCustomersPage.jsx":"10","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/CustomerList.jsx":"11","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/CustomerListItem.jsx":"12","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/Header.jsx":"13","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/Buttons/ButtonNavStyled.jsx":"14","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/Buttons/ButtonStyled.jsx":"15","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/Buttons/ButtonWarningStyled.jsx":"16","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/CustomerListItemStyled.jsx":"17","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/HeaderStyled.jsx":"18"},{"size":615,"mtime":1610706703432,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1610441708905,"results":"21","hashOfConfig":"20"},{"size":2000,"mtime":1610906858917,"results":"22","hashOfConfig":"20"},{"size":92,"mtime":1610552734231,"results":"23","hashOfConfig":"20"},{"size":3810,"mtime":1610906447139,"results":"24","hashOfConfig":"20"},{"size":3574,"mtime":1610906116523,"results":"25","hashOfConfig":"20"},{"size":4227,"mtime":1610871979311,"results":"26","hashOfConfig":"20"},{"size":4825,"mtime":1610906213616,"results":"27","hashOfConfig":"20"},{"size":962,"mtime":1610872105243,"results":"28","hashOfConfig":"20"},{"size":1261,"mtime":1610618375513,"results":"29","hashOfConfig":"20"},{"size":1232,"mtime":1610907387529,"results":"30","hashOfConfig":"20"},{"size":568,"mtime":1610831188600,"results":"31","hashOfConfig":"20"},{"size":2352,"mtime":1610905211509,"results":"32","hashOfConfig":"20"},{"size":322,"mtime":1610831043916,"results":"33","hashOfConfig":"20"},{"size":451,"mtime":1610831060384,"results":"34","hashOfConfig":"20"},{"size":262,"mtime":1610831039238,"results":"35","hashOfConfig":"20"},{"size":252,"mtime":1610831158073,"results":"36","hashOfConfig":"20"},{"size":594,"mtime":1610831543131,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"23cunp",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/index.js",[],["82","83"],"/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/reportWebVitals.js",[],"/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/App.js",[],"/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/contexts/UserDataContext.js",["84"],"import React, { createContext } from 'react'\n\nexport const UserDataContext = createContext()","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/pages/LoginPage.jsx",["85"],"import React, { useEffect, useContext, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { UserDataContext } from '../contexts/UserDataContext'\n\nimport { ButtonWarningStyled } from '../components/Buttons/ButtonWarningStyled'\n\nexport default function LoginPage() {\n    const [userInput, setUserInput] = useState(getStoredData)\n    const {setUserInfo, loggedIn, setLoggedIn} = useContext(UserDataContext)\n    const history = useHistory()\n\n    useEffect(() => {\n        if (loggedIn) {\n            history.push(\"/home\")\n        }\n    }, [loggedIn])\n\n    function getStoredData() {\n        const data = JSON.parse(localStorage.getItem(\"LOGIN\"))\n        if (data) {\n            return data\n        } else {\n            return { email: \"\", password: \"\"}\n        }\n    }\n\n    function handleOnSubmit(e) {\n        e.preventDefault()\n        const url = \"https://frebi.willandskill.eu/api-token-auth/\"\n        const payload = {\n            email: userInput.email,\n            password: userInput.password\n        }\n        fetch(url, {\n            method: \"POST\",\n            body: JSON.stringify(payload),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            saveUserInfo(data.token)\n            setLoggedIn(true)\n            localStorage.setItem(\"TOKEN\", data.token)\n            localStorage.setItem(\"LOGIN\", JSON.stringify(payload))\n            history.push(\"/home\")\n        })\n    }\n\n    function saveUserInfo(token) {\n        const url = \"https://frebi.willandskill.eu/api/v1/me\"\n        fetch(url, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            }\n        })\n        .then(res => res.json())\n        .then(data => setUserInfo(data))\n    }\n    \n    function handleOnChange(e) {\n        setUserInput({...userInput, [e.target.name]: e.target.value})\n    }\n\n    return (\n        <div className=\"row\">\n            <form onSubmit={handleOnSubmit} class=\"m-50 mx-auto d-flex flex-column p-4 rounded bg-light shadow\">\n                <h1 className=\"text-center\">Log in</h1>\n                <table className=\"mt-4 mb-3\">\n                    <tbody>\n                        <tr>\n                            <th>\n                                <label className=\"mb-0\">Email: </label>\n                            </th>\n                            <td>\n                                <input \n                                    className=\"form-control mb-1\"\n                                    name=\"email\" \n                                    onChange={handleOnChange} \n                                    type=\"email\" \n                                    value={userInput.email} \n                                    required\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                <label className=\"mb-0\">Password: </label>\n                            </th>\n                            <td>\n                                <input \n                                    className=\"form-control mb-1\"\n                                    name=\"password\" \n                                    onChange={handleOnChange} \n                                    type=\"password\" \n                                    value={userInput.password} \n                                    required\n                                />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <ButtonWarningStyled type=\"submit\">Log in</ButtonWarningStyled>\n            </form>\n        </div>\n    )\n}\n","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/pages/CustomerCreatePage.jsx",[],"/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/pages/CustomerDetailPage.jsx",["86","87","88"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { UserDataContext } from '../contexts/UserDataContext'\n\nimport { ButtonStyled } from '../components/Buttons/ButtonStyled'\nimport { ButtonWarningStyled } from '../components/Buttons/ButtonWarningStyled'\n\n\n\nexport default function CustomerDetailPage(props) {\n    const [customerData, setCustomerData] = useState()\n    const {customers, setCustomers} = useContext(UserDataContext)\n    const customerId = props.match.params.id\n    const history = useHistory()\n\n    useEffect(() => {\n        if (customers) {\n            // get customer info from customers\n            setCustomerData(customers[customers.findIndex(item => item.id == customerId)])\n        } else {\n            // save new customer data from api\n            const url = `https://frebi.willandskill.eu/api/v1/customers/${customerId}/`\n            const token = localStorage.getItem(\"TOKEN\")\n\n            fetch(url, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                }\n            })\n            .then(res => res.json())\n            .then(data => setCustomerData(data))  \n        }\n    }, [])\n\n    function renderData(title, key, href) {\n        return (\n            <tr>\n                <th>{title}</th>\n                <td className=\"pl-4\" mailto={customerData[key]}>\n                    {href \n                    ? <a href={href} target=\"_blank\">{customerData[key]}</a>\n                    : customerData[key]\n                    }  \n                </td>\n            </tr>\n        )\n    }\n\n    function deleteCustomer() {\n        if (window.confirm(\"Are you sure?\")) {\n            const url = `https://frebi.willandskill.eu/api/v1/customers/${customerId}/`\n            const token = localStorage.getItem(\"TOKEN\")\n            \n            fetch(url, {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                }\n            })\n            .then(() => {\n                const allCustomersUrl = `https://frebi.willandskill.eu/api/v1/customers/`\n                fetch(allCustomersUrl, {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Authorization\": `Bearer ${token}`\n                    }\n                })\n                .then(res => res.json())\n                .then(data => setCustomers(data.results))\n\n            })\n            .then(() => history.push(\"/home\"))\n        }\n    }\n\n    return (\n        <div className=\"row justify-content-center\">\n            {customerData ?\n                <div className=\"col-6 rounded bg-light shadow p-4\">\n                    <h2 className=\"text-center\">Customer details</h2>\n                    <table className=\"mt-4 mb-3\">\n                        <tbody>\n                            {renderData(\"Name:\", \"name\")}\n                            {renderData(\"Organization number:\", \"organisationNr\")}\n                            {renderData(\"VAT number:\", \"vatNr\")}\n                            {renderData(\"Reference:\", \"reference\")}\n                            {renderData(\"Payment term:\", \"paymentTerm\")}\n                            {renderData(\"Website:\", \"website\", customerData.website)}\n                            {renderData(\"Email:\", \"email\", `mailto:${customerData.email}`)}\n                            {renderData(\"Phone number:\", \"phoneNumber\")}\n                        </tbody>\n                    </table>\n                    <div className=\"mt-4  d-flex flex-column\">\n                        <ButtonWarningStyled onClick={() => history.push(`/customer/${customerId}/edit`)}>Edit info</ButtonWarningStyled>\n                        <ButtonWarningStyled danger onClick={deleteCustomer} className=\"mt-2\">Delete customer</ButtonWarningStyled>\n                        <ButtonStyled onClick={() => history.push(\"/home\")}className=\"mt-2\">Back</ButtonStyled>\n                    </div>\n                </div>\n            :\n                <p>Loading data...</p>\n            }\n        </div>\n    )\n}\n","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/pages/CustomerUpdatePage.jsx",["89","90"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { UserDataContext } from '../contexts/UserDataContext'\n\nimport { ButtonStyled } from '../components/Buttons/ButtonStyled'\nimport { ButtonWarningStyled } from '../components/Buttons/ButtonWarningStyled'\n\n\nexport default function CustomerUpdate(props) {\n    const [formData, setFormData] = useState()\n    const {customers, setCustomers} = useContext(UserDataContext)\n    const customerId = props.match.params.id\n    const history = useHistory()\n\n    useEffect(() => {\n        if (customers) {\n            //* take customer data from stored object:\n            setFormData(customers[customers.findIndex(item => item.id == customerId)])\n        } else {\n            //* save new customer data from api:\n            const url = `https://frebi.willandskill.eu/api/v1/customers/${customerId}/`\n            const token = localStorage.getItem(\"TOKEN\")\n\n            fetch(url, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                }\n            })\n            .then(res => res.json())\n            .then(data => setFormData(data))  \n        }\n    }, [])\n\n    function handleOnSubmit(e) {\n        if (validateVat(formData.vatNr)) {\n            e.preventDefault()\n            const url = `https://frebi.willandskill.eu/api/v1/customers/${customerId}/`\n            const token = localStorage.getItem(\"TOKEN\")\n\n            fetch(url, {\n                method: \"PUT\",\n                body: JSON.stringify(formData),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                }\n            })\n            .then(res => res.json())\n            .then(() => {\n                const allCustomersUrl = `https://frebi.willandskill.eu/api/v1/customers/`\n                fetch(allCustomersUrl, {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Authorization\": `Bearer ${token}`\n                    }\n                })\n                .then(res => res.json())\n                .then(data => setCustomers(data.results))\n                .then(() => history.push('/home'))\n            }) \n        } else {\n            alert(\"VAT nr must start with SE and end with 10 digits.\")\n            e.preventDefault()\n        }\n    }\n\n    function validateVat(str) {\n        let countryCode = (str[0] + str[1]).toUpperCase()\n        let numbers = str.substring(2)\n        let isNum = /^\\d+$/.test(numbers)\n        setFormData({...formData, vatNr: (countryCode + numbers)})\n    \n        return countryCode === \"SE\" && numbers.length === 10 && isNum\n    }\n\n    function renderInput(label, name, type) {\n        return (\n            <tr>\n                <th>\n                    <label>{label}</label>\n                </th>\n                <td className=\"pl-4\">\n                    <input \n                        type={type || \"text\"}\n                        value={formData[name]}\n                        name={name}\n                        onChange={e => {\n                            setFormData({...formData, [e.target.name]: e.target.value})\n                        }}\n                        required\n                    />\n                </td>\n            </tr>\n        )\n    }\n    return (\n        <div className=\"row justify-content-center\">\n            {formData ?\n                <form onSubmit={handleOnSubmit} className=\"col-6 rounded bg-light shadow p-4\">\n                    <h2 className=\"text-center\">Edit customer info</h2>\n                    <table className=\"mt-4 mb-4\">\n                        <tbody>\n                            {renderInput(\"Name:\", \"name\")}\n                            {renderInput(\"Organization number:\", \"organisationNr\", \"number\")}\n                            {renderInput(\"VAT number:\", \"vatNr\")}\n                            {renderInput(\"Reference:\", \"reference\")}\n                            {renderInput(\"Payment term:\", \"paymentTerm\", \"number\")}\n                            {renderInput(\"Website:\", \"website\", \"url\")}\n                            {renderInput(\"Email:\", \"email\", \"email\")}\n                            {renderInput(\"Phone number:\", \"phoneNumber\", \"tel\")}\n                        </tbody>\n                    </table>\n                    <div className=\"d-flex flex-column\">\n                        <ButtonWarningStyled>Submit</ButtonWarningStyled>\n                        <ButtonStyled onClick={() => history.push(`/customer/${customerId}/`)} className=\"mt-2\">Back</ButtonStyled>\n                    </div>\n                </form>\n            :\n                <p>Loading form...</p>\n            }\n        </div>\n    )\n}\n","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/pages/HomePage.jsx",[],"/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/pages/DevCompareCustomersPage.jsx",[],["91","92"],"/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/CustomerList.jsx",["93"],"/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/CustomerListItem.jsx",[],"/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/Header.jsx",["94"],"import React, { useContext, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { UserDataContext } from '../contexts/UserDataContext'\n\nimport { ButtonNavStyled } from './Buttons/ButtonNavStyled'\nimport { HeaderStyled } from './HeaderStyled'\n\n\nexport default function Header() {\n    const {\n        userInfo, setUserInfo, \n        setCustomers, \n        loggedIn, setLoggedIn\n    } = useContext(UserDataContext)\n\n    const history = useHistory()\n\n    function handleLogOut() {\n        setUserInfo({})\n        setCustomers(null)\n        setLoggedIn(false)\n        localStorage.removeItem(\"TOKEN\")\n        history.push(\"/\")\n    }\n\n    useEffect(() => {\n        if (loggedIn && (Object.keys(userInfo).length < 1)) {\n            const url = \"https://frebi.willandskill.eu/api/v1/me\"\n            const token = localStorage.getItem(\"TOKEN\")\n            fetch(url, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                }\n            })\n            .then(res => res.json())\n            .then(data => setUserInfo(data))\n        }\n    }, [loggedIn])\n\n    return (\n        <div className=\"row\">\n            <HeaderStyled>\n                <h1 className=\"text-center m-5\">BIG BIZNEZ</h1>\n                {loggedIn && (\n                    <div>\n                        <div>\n                            <Link to=\"/home\">\n                                <ButtonNavStyled nav>Home</ButtonNavStyled>\n                            </Link>\n                            <Link to=\"/customer/add\">\n                                <ButtonNavStyled nav>Add Customer</ButtonNavStyled>\n                            </Link>\n                        </div>\n                        <div>\n                            <div>\n                                {userInfo.firstName && <p className=\"text-light\">Logged in as: {userInfo.firstName}</p>}\n                            </div>\n                            <ButtonNavStyled \n                                onClick={handleLogOut} \n                                background=\"gold\">\n                                    Log out\n                            </ButtonNavStyled>\n                        </div>\n                    </div> \n                )}\n            </HeaderStyled>\n        </div>\n    )\n}\n","/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/Buttons/ButtonNavStyled.jsx",[],"/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/Buttons/ButtonStyled.jsx",[],"/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/Buttons/ButtonWarningStyled.jsx",[],"/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/CustomerListItemStyled.jsx",[],["95","96"],"/Users/moonbase/Documents/CODE/VSC/School/Nackademin/projects/crm_fend3/src/components/HeaderStyled.jsx",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":16,"column":8,"nodeType":"107","endLine":16,"endColumn":18,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":19,"column":75,"nodeType":"111","messageId":"112","endLine":19,"endColumn":77},{"ruleId":"105","severity":1,"message":"113","line":34,"column":8,"nodeType":"107","endLine":34,"endColumn":10,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":42,"column":23,"nodeType":"117","endLine":42,"endColumn":54},{"ruleId":"109","severity":1,"message":"110","line":18,"column":71,"nodeType":"111","messageId":"112","endLine":18,"endColumn":73},{"ruleId":"105","severity":1,"message":"113","line":33,"column":8,"nodeType":"107","endLine":33,"endColumn":10,"suggestions":"118"},{"ruleId":"97","replacedBy":"119"},{"ruleId":"99","replacedBy":"120"},{"ruleId":"105","severity":1,"message":"121","line":28,"column":8,"nodeType":"107","endLine":28,"endColumn":10,"suggestions":"122"},{"ruleId":"105","severity":1,"message":"123","line":39,"column":8,"nodeType":"107","endLine":39,"endColumn":18,"suggestions":"124"},{"ruleId":"97","replacedBy":"125"},{"ruleId":"99","replacedBy":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["129"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'customerId' and 'customers'. Either include them or remove the dependency array.",["130"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["131"],["127"],["128"],"React Hook useEffect has missing dependencies: 'customers' and 'setCustomers'. Either include them or remove the dependency array.",["132"],"React Hook useEffect has missing dependencies: 'setUserInfo' and 'userInfo'. Either include them or remove the dependency array.",["133"],["127"],["128"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"136","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [history, loggedIn]",{"range":"143","text":"144"},"Update the dependencies array to be: [customerId, customers]",{"range":"145","text":"146"},{"range":"147","text":"146"},"Update the dependencies array to be: [customers, setCustomers]",{"range":"148","text":"149"},"Update the dependencies array to be: [loggedIn, setUserInfo, userInfo]",{"range":"150","text":"151"},[561,571],"[history, loggedIn]",[1269,1271],"[customerId, customers]",[1257,1259],[842,844],"[customers, setCustomers]",[1162,1172],"[loggedIn, setUserInfo, userInfo]"]